diff --git a/node_modules/@sphereon/pex/dist/main/lib/evaluation/handlers/uriEvaluationHandler.js b/node_modules/@sphereon/pex/dist/main/lib/evaluation/handlers/uriEvaluationHandler.js
index 728096f..7d7bac1 100644
--- a/node_modules/@sphereon/pex/dist/main/lib/evaluation/handlers/uriEvaluationHandler.js
+++ b/node_modules/@sphereon/pex/dist/main/lib/evaluation/handlers/uriEvaluationHandler.js
@@ -32,6 +32,7 @@ class UriEvaluationHandler extends abstractEvaluationHandler_1.AbstractEvaluatio
         const descriptorMap = this.getResults()
             .filter((result) => result.status === ConstraintUtils_1.Status.INFO)
             .map((result) => {
+            console.log(" inside handle function  of uriEvaluationHandler.js :: result,", result)
             var _a, _b, _c, _d;
             let format = (_a = result.payload) === null || _a === void 0 ? void 0 : _a.format;
             // This checks if the new data integrity format should be used.
@@ -56,7 +57,13 @@ class UriEvaluationHandler extends abstractEvaluationHandler_1.AbstractEvaluatio
                     format = 'di_vc';
                 }
             }
+
+            console.log("jsonpath_1.JSONPath.nodes(definition, result.input_descriptor_path)[0]::", JSON.stringify(jsonpath_1.JSONPath.nodes(definition, result.input_descriptor_path)[0],null,2))
+            console.log("jsonpath_1.JSONPath.nodes(definition, result.input_descriptor_path)[0].value::", JSON.stringify(jsonpath_1.JSONPath.nodes(definition, result.input_descriptor_path)[0].value,null,2))
+
             const inputDescriptor = jsonpath_1.JSONPath.nodes(definition, result.input_descriptor_path)[0].value;
+
+           
             return {
                 id: inputDescriptor.id,
                 format,
